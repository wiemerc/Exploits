#!/usr/bin/env python3


import requests
import spnego
import sys
from argparse import ArgumentDefaultsHelpFormatter, ArgumentParser
from base64 import b64decode, b64encode
from http import HTTPStatus
from loguru import logger
from urllib.parse import urlparse


EXIT_OK = 0
EXIT_ERROR = 1


def main() -> int:
    parser = ArgumentParser(
        description="A simple HTTP client with SPNEGO authentication. It allows setting various parameters, "
                    "e. g. the target name, for testing NTLM / Kerberos relay attacks",
        formatter_class=ArgumentDefaultsHelpFormatter,
    )
    parser.add_argument("url")
    parser.add_argument("--user", "-u", default="consti")
    parser.add_argument("--password", "-p", default="consti123")
    parser.add_argument("--target-name")
    parser.add_argument("--expected-status", type=int, default=HTTPStatus.OK)
    args = parser.parse_args()

    try:
        parsed_url = urlparse(args.url)
        session = requests.Session()
        sec_context = spnego.client(
            username=args.user,
            password=args.password,
            hostname=args.target_name if args.target_name else parsed_url.netloc,
            service="HTTP",
        )

        logger.debug("Sending initial request to server")
        req_token = sec_context.step()
        resp = session.get(
            args.url,
            headers={
                "Authorization": "Negotiate " + b64encode(req_token).decode()
            }
        )
        if resp.status_code == HTTPStatus.UNAUTHORIZED:
            resp_token = b64decode(resp.headers["WWW-Authenticate"].split()[1])
            logger.debug(
                f"Server replied to initial request with status code 401, authorization token is '{resp_token}'"
            )
        else:
            logger.error(f"Initial request failed with status code {resp.status_code}")
            return EXIT_ERROR

        logger.debug("Sending final request to server")
        req_token = sec_context.step(resp_token)
        resp = session.get(
            args.url,
            headers={
                "Authorization": "Negotiate " + b64encode(req_token).decode()
            }
        )
        if resp.status_code == args.expected_status:
            logger.debug(
                f"Server replied to final request with expected status code {args.expected_status}"
            )
        else:
            logger.error(f"Final request failed with status code {resp.status_code}")
            return EXIT_ERROR
    except Exception:
        logger.exception("Error occurred while talking to server:")
        return EXIT_ERROR

    return EXIT_OK


if __name__ == "__main__":
    sys.exit(main())
